[{"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\index.js":"1","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\App.js":"2","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\account.js":"3","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\home.js":"4","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\category.js":"5","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\wishlist.js":"6","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\notify.js":"7","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\cart.js":"8","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\message.js":"9","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\404.js":"10","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\redux\\product.js":"11","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\signup.js":"12","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\appbar.js":"13","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\signin.js":"14","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\SingleProduct.js":"15","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\privateroute.js":"16","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\addproduct.js":"17","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\addcategory.js":"18","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\dashboard.js":"19","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\dashoboard.js":"20","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\shop.js":"21","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\searchBox.js":"22","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\appdrawer.js":"23","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\navlist.js":"24","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\iconmenu.js":"25","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\config.js":"26","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\user.js":"27","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\product.js":"28","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\productcard.js":"29","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\userinfo.js":"30","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\sideelm.js":"31","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\admininfo.js":"32","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\cartHelper.js":"33","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\cartCard.js":"34","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\billingTable.js":"35","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\order.js":"36","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\footer.js":"37"},{"size":413,"mtime":1612171304423,"results":"38","hashOfConfig":"39"},{"size":2260,"mtime":1664006041399,"results":"40","hashOfConfig":"39"},{"size":588,"mtime":1658050418956,"results":"41","hashOfConfig":"39"},{"size":2699,"mtime":1613135999617,"results":"42","hashOfConfig":"39"},{"size":3731,"mtime":1612891612969,"results":"43","hashOfConfig":"39"},{"size":121,"mtime":1612260963527,"results":"44","hashOfConfig":"39"},{"size":125,"mtime":1612260880149,"results":"45","hashOfConfig":"39"},{"size":1498,"mtime":1613560395128,"results":"46","hashOfConfig":"39"},{"size":120,"mtime":1612260963527,"results":"47","hashOfConfig":"39"},{"size":116,"mtime":1612264713745,"results":"48","hashOfConfig":"39"},{"size":2564,"mtime":1613159231396,"results":"49","hashOfConfig":"39"},{"size":8336,"mtime":1658043016879,"results":"50","hashOfConfig":"39"},{"size":1730,"mtime":1664006416794,"results":"51","hashOfConfig":"39"},{"size":4892,"mtime":1655729174294,"results":"52","hashOfConfig":"39"},{"size":6111,"mtime":1664003230906,"results":"53","hashOfConfig":"39"},{"size":536,"mtime":1645033694659,"results":"54","hashOfConfig":"39"},{"size":8176,"mtime":1612683285527,"results":"55","hashOfConfig":"39"},{"size":3550,"mtime":1612684126252,"results":"56","hashOfConfig":"39"},{"size":1644,"mtime":1658051925226,"results":"57","hashOfConfig":"39"},{"size":1633,"mtime":1612767685339,"results":"58","hashOfConfig":"39"},{"size":2379,"mtime":1612890505647,"results":"59","hashOfConfig":"39"},{"size":2959,"mtime":1658049014350,"results":"60","hashOfConfig":"39"},{"size":2851,"mtime":1658049035259,"results":"61","hashOfConfig":"39"},{"size":3389,"mtime":1613127181548,"results":"62","hashOfConfig":"39"},{"size":3510,"mtime":1645211809173,"results":"63","hashOfConfig":"39"},{"size":51,"mtime":1612343567414,"results":"64","hashOfConfig":"39"},{"size":2813,"mtime":1658051225772,"results":"65","hashOfConfig":"39"},{"size":3587,"mtime":1658052083952,"results":"66","hashOfConfig":"39"},{"size":3219,"mtime":1664004945159,"results":"67","hashOfConfig":"39"},{"size":7594,"mtime":1658051959558,"results":"68","hashOfConfig":"39"},{"size":1675,"mtime":1612766920370,"results":"69","hashOfConfig":"39"},{"size":4547,"mtime":1612767773911,"results":"70","hashOfConfig":"39"},{"size":1009,"mtime":1613132312966,"results":"71","hashOfConfig":"39"},{"size":2677,"mtime":1664005163723,"results":"72","hashOfConfig":"39"},{"size":4649,"mtime":1658037886852,"results":"73","hashOfConfig":"39"},{"size":2592,"mtime":1658056283260,"results":"74","hashOfConfig":"39"},{"size":1211,"mtime":1664006179436,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1vz9b7k",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\index.js",[],["168","169"],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\App.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\account.js",["170"],"import React from 'react';\r\nimport {userLoged} from '../apimethod/user';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DashBoard from '../component/user/dashboard';\r\nimport AdminDashBoard from '../component/admin/dashoboard';\r\nconst reDirectTo = ()=>{\r\n   const jwt = userLoged()\r\n    if(!jwt){\r\n      return (<Redirect to='/login' />)\r\n   }\r\n}\r\n\r\nexport default ()=>{\r\n    return(\r\n        <div>\r\n            {reDirectTo()}\r\n           {userLoged().user.role === 1 &&(<AdminDashBoard />)}\r\n           {userLoged().user.role === 0 &&(<DashBoard />)}\r\n        </div>\r\n         )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\home.js",["171","172"],"import React ,{useState , useEffect}from 'react';\r\nimport {getProductBy} from '../apimethod/product';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ProductCard from '../component/productcard';\r\nimport { connect} from 'react-redux';\r\nimport {getProductByApi} from '../redux/product';\r\n\r\nconst Home = (props)=>{\r\n    \r\n    const productArrival = ()=>{\r\n        getProductBy('createdAt').then((data)=>{\r\n            if(!data){\r\n                return console.log('No data is found');\r\n            }        \r\n            props.getProdByApi(data, 'createdAt');\r\n           \r\n    })\r\n    }\r\n    const productSell = ()=>{\r\n        getProductBy('sell').then((data)=>{\r\n            if(!data){\r\n                return console.log('No data is found');\r\n            }        \r\n            props.getProdByApi(data, 'sell');\r\n            \r\n    })\r\n    }\r\n    useEffect(()=>{\r\n         productArrival();\r\n         productSell();\r\n    \r\n    },[])\r\n    \r\n    \r\n    return(\r\n    <div>\r\n              {props.prodState.search.length >0 &&(\r\n               <React.Fragment>   \r\n              <h1>{props.prodState.search.length} Search Product found</h1>\r\n              <Grid container spacing={3} direction='row' style={{flexGrow:1}}>\r\n                    { props.prodState.search.map((product, i)=>{\r\n                      return(<ProductCard key={i} product={product} />\r\n                      )\r\n                    })}\r\n                   </Grid>\r\n                </React.Fragment>)\r\n              }\r\n                \r\n\r\n                 <h1>New Arrival</h1>\r\n                <Grid container spacing={3} direction='row' style={{flexGrow:1}}>\r\n                 {props.prodState.createdAt.length >0 && props.prodState.createdAt.map((product, i)=>{\r\n                   return(<ProductCard key={i} product={product} />\r\n                   )\r\n                 })}\r\n                </Grid>\r\n                <h1>Best Seller</h1>\r\n                <Grid container spacing={3} direction='row' style={{flexGrow:1}}>\r\n                 {props.prodState.sell.length && props.prodState.sell.map((product, i)=>{\r\n                   return(<ProductCard key={i} product={product} />\r\n                   )\r\n                 })}\r\n                </Grid>\r\n                <Grid container spacing={3} direction='row' style={{flexGrow:1}}>\r\n                 </Grid>\r\n\r\n                    </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\r\n      prodState : state ? state : {createdAt:[] ,sell:[] , search:[]}   \r\n})\r\nconst mapDispatchToProps = (dispatch)=>({\r\n    getProdByApi : (prodData , sort)=>dispatch(getProductByApi(prodData , sort))\r\n})\r\n\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(Home);","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\category.js",["173","174","175"],"import React, { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {CatList , PriceRange} from '../component/shop';\r\nimport {getAllCat , productBySearch} from '../apimethod/product';\r\nimport Button from '@material-ui/core/Button';\r\nimport ProductCard from '../component/productcard';\r\n\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n    allFilters :{\r\n        minwidth:'33%',\r\n        height:'auto',\r\n        maxWidth:412\r\n    },\r\n    paper:{\r\n        width:'100%',\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(3)\r\n    },\r\n    filteredProduct:{\r\n             width:'66%',\r\n             margin: theme.spacing(2),\r\n             padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport default ()=>{\r\n\r\n      const classes = useStyle();\r\n      const [categories , setCategories] = useState([]);\r\n      const [allFilters, setFilters] = useState({\r\n          filtersObj : {category: [] , price:[]}\r\n      })\r\n      const [filtProduct , setFiltProduct] = useState([]);\r\n      const [limit ,setLimit] = useState(6);\r\n      const [skip, setSkip] = useState(0);\r\n      const catLoader = ()=>{\r\n              getAllCat().then((data)=>{\r\n                  if(!data){\r\n                     return console.log('no data is loaded');\r\n                  }\r\n                  setCategories(data);\r\n              })\r\n      }\r\n     useEffect(()=>{\r\n                  catLoader();\r\n                  applyFilter();\r\n     }, [])\r\n    const handleFilter = (filters , filterBy)=>{\r\n                  const newFilter = {...allFilters};\r\n                  newFilter.filtersObj[filterBy] = filters\r\n                 setFilters(newFilter);    \r\n    }\r\n    const applyFilter = ()=>{\r\n        const filter = allFilters.filtersObj;\r\n        productBySearch(limit , skip, filter).then((data)=>{\r\n            if(!data){\r\n                console.log('no data is found');\r\n            }\r\n            setFiltProduct(data)\r\n        })\r\n    }\r\n    const loadMore = ()=>{\r\n        const newSkip  = limit + skip;\r\n        const filter = allFilters.filtersObj;\r\n        \r\n        setSkip(newSkip);\r\n        productBySearch(limit , newSkip, filter).then((data)=>{\r\n            if(!data){\r\n                console.log('no data is found');\r\n            }\r\n            setFiltProduct(data)\r\n        })\r\n    }\r\n    const loadMoreButton = ()=>{\r\n        if(filtProduct.length >=limit){\r\n         return (<Button onClick={loadMore} variant='contained' >Load More</Button>)\r\n        }\r\n    }\r\n\r\n\r\n        return(<div>\r\n             <Grid container  direction='row' >\r\n             <Grid spacing={3} container alignItems='center' xs item direction='column' className={classes.allFilters}>\r\n             <Paper elevation={3} className={classes.paper}>    \r\n             <Typography variant='h5' style={{marginTop : 20}}>\r\n                 Caterories\r\n             </Typography>\r\n                 <CatList categories={categories} handleFilter={filters => handleFilter(filters , 'category')} />\r\n                 <PriceRange priceHandler={filters =>handleFilter(filters , 'price')}  />\r\n                 <Button onClick={applyFilter} variant='contained'>Apply</Button>\r\n             </Paper>\r\n             </Grid>\r\n             <Grid spacing={3} container alignItems='center'  direction='row' className={classes.filteredProduct}>\r\n                  {filtProduct.map((p,i)=>(\r\n                     <ProductCard key={i} product={p} />\r\n                  ))}\r\n\r\n                  {loadMoreButton()}\r\n                  </Grid> \r\n                  </Grid>\r\n    </div>\r\n        )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\wishlist.js",["176"],"import React from 'react';\r\n\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n        <h1>this is the wishlist page</h1>\r\n    )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\notify.js",["177"],"import React from 'react';\r\n\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n        <h1>this is the notification page</h1>\r\n    )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\cart.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\message.js",["178"],"import React from 'react';\r\n\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n        <h1>this is the Message page</h1>\r\n    )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\routes\\404.js",["179"],"import React from 'react';\r\n\r\n\r\n\r\nexport default ()=>{\r\n    return(\r\n        <h1>this is the 404 page</h1>\r\n    )\r\n}","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\redux\\product.js",["180"],"import {createStore} from 'redux';\r\n\r\n//Actions generator\r\n\r\nconst getProductByApi = (prod, sortBy) =>({\r\n     type: 'GETPRODUCTBYAPI',\r\n     productByApi : prod,\r\n     sortBy:sortBy\r\n})\r\n\r\nconst getProductBySearch = (prod , searchBy)=>({\r\n     type: 'GETPRODUCTBYSEARCH',\r\n     productBySearch: prod,\r\n     searchBy\r\n})\r\n// cart actions\r\n\r\nconst getCartProduct = (prod)=>({\r\n      type:'CARTPRODUCT',\r\n      cartProd: prod\r\n})\r\n\r\nconst removeCartProd = (id)=>({\r\n    type: 'CARTREMOVE',\r\n    id\r\n})\r\n\r\n\r\nconst productQty = (qty , id)=>({\r\n    type: 'QTYADD',\r\n    qty,\r\n    id\r\n})\r\n\r\n//Reducers \r\nconst prodcutReducer = (productState = {sell:[] , createdAt:[] , search:[] , cartProduct:[]} , action)=>{\r\n     const {productByApi, sortBy, searchBy ,cartProd , productBySearch,qty, id} = action\r\n    switch(action.type){\r\n        case 'GETPRODUCTBYAPI':\r\n            return {\r\n                  ...productState,\r\n                [sortBy]  : productByApi}\r\n        case 'GETPRODUCTBYSEARCH':\r\n            return {\r\n                ...productState,\r\n                [searchBy]:productBySearch\r\n            }\r\n        case 'CARTPRODUCT':\r\n            if(cartProd){\r\n            const val=  productState.cartProduct.find((p) => p._id === cartProd._id)\r\n           if(val){\r\n               return {\r\n                   ...productState\r\n               };\r\n           }  \r\n           const arr = productState.cartProduct.concat(cartProd);\r\n                return {\r\n                    ...productState,\r\n                     cartProduct : arr\r\n                };\r\n         \r\n            }\r\n            break;\r\n        case 'CARTREMOVE':\r\n            const filtarr = productState.cartProduct.filter((p)=> (p._id !==id));\r\n            return {\r\n                ...productState,\r\n                cartProduct: filtarr\r\n            }\r\n            break;\r\n        case 'QTYADD' :\r\n            const maparr = productState.cartProduct.map((p)=>{\r\n                if(p._id === id){\r\n                    p.qty = qty\r\n                    return p\r\n                }\r\n                return p\r\n            })\r\n            return{\r\n                ...productState,\r\n                cartProduct: maparr\r\n            }       \r\n          default: break;  \r\n                \r\n    }\r\n}\r\n// cart reducer and action\r\n\r\nconst productStore = createStore(prodcutReducer);\r\n\r\nproductStore.subscribe(()=>{\r\n    console.log(productStore.getState());\r\n})\r\n\r\n\r\nexport {productStore ,getProductByApi , getProductBySearch , getCartProduct ,removeCartProd,productQty}\r\n//export default prodcutReducer;\r\n","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\signup.js",["181"],"import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport img from '../../assets/account.png';\r\nimport {Redirect , Link} from 'react-router-dom';\r\nimport {signup , authenticate} from '../../apimethod/user';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 350,\r\n        maxWidth: 500,\r\n        alignItems:'center',\r\n        margin: theme.spacing(2),\r\n        marginTop: '70px',\r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 520,\r\n            maxWidth: 800,\r\n            },  \r\n       },\r\n       textWidth: {\r\n        minWidth: 330,\r\n        maxWidth: 500,\r\n        margin: theme.spacing(2),\r\n       \r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 500,\r\n            maxWidth: 600,\r\n        \r\n            },  \r\n       },\r\n     \r\n      marg: {\r\n        margin: theme.spacing(3),   \r\n      }, \r\n      img:{\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        marginTop: '-50px',\r\n\r\n    }\r\n      \r\n      \r\n\r\n    \r\n}))\r\n\r\n \r\n\r\nconst SignUp =()=>{\r\n        const classes = useStyles(); \r\n        \r\n        const [values , setvalues] = useState({\r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            confirmpassword:'',\r\n            country:'',\r\n            username:'',\r\n            mob:'',\r\n            address:'',\r\n            redirect: false\r\n        })\r\n\r\n        const [helpervalues , sethelpervalues] = useState({\r\n            nameHelper:'',\r\n            emailHelper:'',\r\n            passwordHelper:''\r\n        \r\n        })\r\n        const {nameHelper , emailHelper ,passwordHelper} = helpervalues;\r\n    \r\n        const handleChange = (name) => (event)=> {\r\n            setvalues({...values , [name]:event.target.value})\r\n        }\r\n       const errorHandler = (errObj)=>{\r\n           sethelpervalues({...errObj})\r\n       }\r\n        const signHandle = (e)=>{\r\n            e.preventDefault()\r\n             const {name , email , password ,confirmpassword,country,address,username,mob}   = values     \r\n              if(password !== confirmpassword){\r\n                  return sethelpervalues({passwordHelper : 'Password are not Matched'});\r\n              }   \r\n             signup({name , email,address , password,country,username,mob: parseInt(mob)}).then(data=>{\r\n                if(!data){\r\n                    return\r\n                }\r\n                if(data.error){\r\n                 const a = data.error;\r\n                 let errCurrentState = {};\r\n                 let adderrr = (name , err)=>{\r\n                    errCurrentState[name] = err;\r\n                 }\r\n                  a.forEach((err)=>{\r\n                    const errName = Object.keys(err);\r\n                    if(errName[0] === 'Name'){\r\n                       adderrr('nameHelper' , err[errName]);\r\n                    }\r\n                    if(errName[0] === 'Email'){\r\n                        adderrr('emailHelper' , err[errName]);\r\n                    }\r\n                    if(errName[0] === 'Password'){\r\n                        adderrr('passwordHelper' , err[errName]);\r\n                    }\r\n\r\n                })\r\n               return errorHandler(errCurrentState);\r\n              }\r\n            \r\n              authenticate(data , ()=>{\r\n                console.log(data);  \r\n                setvalues({...values , redirect:true});\r\n                console.log(values);\r\n                 \r\n              })\r\n            });\r\n        }\r\n        \r\n        const redirectTo = ()=>{\r\n            if(values.redirect) {\r\n                 return <Redirect to=\"/\" />\r\n            } \r\n         }\r\n\r\n       \r\n         return(\r\n            <React.Fragment>\r\n             <Grid container spacing={1}\r\n             justify=\"center\"\r\n             alignItems=\"center\" >\r\n                 <Paper elevation={3}  className={classes.root}>\r\n                 <Grid container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                <Grid    container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                       <img src={img} className={classes.img}/> \r\n                        </Grid>      \r\n              <Typography variant='h4'align='center' className={classes.marg}>\r\n                   SignUp to CludeMarket \r\n              </Typography>\r\n                        \r\n                <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    margin=\"normal\"\r\n                    onChange={handleChange('name')}\r\n                    helperText={nameHelper}\r\n                />\r\n                    <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('email')}\r\n                    helperText={emailHelper}\r\n                />\r\n                  <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Mobile No.\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('mob')}\r\n                    helperText={emailHelper}\r\n                />\r\n             <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"UserName\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('username')}\r\n                    helperText={emailHelper}\r\n                />\r\n                 <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Country\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('country')}\r\n                    helperText={emailHelper}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('address')}\r\n                    helperText={emailHelper}\r\n                />\r\n            <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('password')}\r\n                    helperText={passwordHelper}\r\n                />\r\n            <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Confirm Password\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('confirmpassword')}\r\n                    \r\n                />\r\n               <Grid container spacing={3}\r\n                    justify=\"space-around\"\r\n                    className={classes.marg} >\r\n                 <Grid item>   \r\n                <Button variant=\"outlined\" component ={Link} to='/login'>\r\n                   LogIn\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={signHandle}>\r\n                SignUp\r\n                </Button>\r\n                </Grid>\r\n                 </Grid>\r\n                </Grid>\r\n         \r\n                 </Paper>\r\n                 </Grid>\r\n         \r\n\r\n             \r\n              {redirectTo()}\r\n              </React.Fragment>\r\n         )\r\n     }\r\n\r\n     export default SignUp;","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\appbar.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\signin.js",["182"],"import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport img from '../../assets/account.png';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {signin , authenticate} from '../../apimethod/user';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 350,\r\n        maxWidth: 500,\r\n        alignItems:'center',\r\n        margin: theme.spacing(2),\r\n        marginTop: '70px',\r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 520,\r\n            maxWidth: 800,\r\n            },  \r\n       },\r\n       textWidth: {\r\n        minWidth: 330,\r\n        maxWidth: 500,\r\n        margin: theme.spacing(2),\r\n       \r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 500,\r\n            maxWidth: 600,\r\n        \r\n            },  \r\n       },\r\n     \r\n      marg: {\r\n        margin: theme.spacing(3),   \r\n      }, \r\n      img:{\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        marginTop: '-50px',\r\n\r\n    }\r\n      \r\n      \r\n\r\n    \r\n}))\r\n\r\n \r\n\r\nconst SignUp =()=>{\r\n        const classes = useStyles(); \r\n        \r\n        const [values , setvalues] = useState({\r\n            email:'',\r\n            password:'',\r\n            redirect: false\r\n        })\r\n\r\n        const [helpervalues , sethelpervalues] = useState({\r\n            emailHelper:'',\r\n        \r\n        })\r\n        const { emailHelper} = helpervalues;\r\n    \r\n        const handleChange = (name) => (event)=> {\r\n            setvalues({...values , [name]:event.target.value})\r\n        }\r\n       const errorHandler = (errObj)=>{\r\n           sethelpervalues({...errObj})\r\n       }\r\n        \r\n       //\r\n       const signHandle = (e)=>{\r\n        e.preventDefault()\r\n         const {email , password }   = values     \r\n            \r\n         signin({ email , password}).then(data=>{\r\n            if(!data){\r\n                return\r\n            }\r\n            if(data.Error){\r\n           return  errorHandler({emailHelper: data.Error});\r\n          }\r\n           authenticate(data , ()=>{\r\n            console.log(data);  \r\n            setvalues({...values , redirect:true});\r\n             \r\n          })\r\n        });\r\n    }\r\n\r\n           // \r\n        \r\n        \r\n        const redirectTo = ()=>{\r\n            if(values.redirect) {\r\n                 return <Redirect to=\"/\" />\r\n            } \r\n         }\r\n         \r\n       \r\n         return(\r\n            <React.Fragment>\r\n             <Grid container spacing={1}\r\n             justify=\"center\"\r\n             alignItems=\"center\" >\r\n                 <Paper elevation={3}  className={classes.root}>\r\n                 <Grid container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                <Grid    container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                       <img src={img} className={classes.img}/> \r\n                        </Grid>      \r\n              <Typography variant='h4'align='center' className={classes.marg}>\r\n                   SignIn to CludeMarket \r\n              </Typography>\r\n                        \r\n                \r\n                    <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('email')}\r\n                    helperText={emailHelper}\r\n                />\r\n            \r\n            <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('password')}\r\n                />\r\n           \r\n               <Grid container spacing={3}\r\n                    justify=\"space-around\"\r\n                    className={classes.marg} >\r\n                 <Grid item>   \r\n                <Button variant=\"outlined\" component={Link} to='/signup' >\r\n                   SignUp\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={signHandle}>\r\n                SignIn\r\n                </Button>\r\n                </Grid>\r\n                 </Grid>\r\n                </Grid>\r\n         \r\n                 </Paper>\r\n                 </Grid>\r\n         \r\n\r\n             \r\n              {redirectTo()}\r\n              </React.Fragment>\r\n         )\r\n     }\r\n\r\n     export default SignUp;","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\SingleProduct.js",["183","184","185","186"],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\privateroute.js",["187"],"import React  , {Component} from 'react';\r\nimport {Route , Redirect} from 'react-router-dom';\r\nimport {userLoged} from '../../apimethod/user';\r\n\r\n\r\nconst PrivateRoute = ({component : Component,  ...rest})=>(\r\n       \r\n  <Route {...rest} render={props=>\r\n        userLoged() && userLoged().user.role === 1  ?  \r\n            (<Component {...props}/>)\r\n          : (<Redirect to={{\r\n              pathname: '/',\r\n              state: {from : props.location}\r\n             }} />)\r\n\r\n        }\r\n         />\r\n)\r\n\r\nexport default PrivateRoute;","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\addproduct.js",["188","189"],"import React, {useState ,useEffect} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport img from '../../assets/marketimg.jpg';\r\nimport {Redirect , Link} from 'react-router-dom';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {addProduct , getAllCat} from '../../apimethod/product';\r\nconst useStyles = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 350,\r\n        maxWidth: 500,\r\n        alignItems:'center',\r\n        margin: theme.spacing(2),\r\n        marginTop: '70px',\r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 520,\r\n            maxWidth: 800,\r\n            },  \r\n       },\r\n       textWidth: {\r\n        minWidth: 330,\r\n        maxWidth: 500,\r\n        margin: theme.spacing(2),\r\n       \r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 500,\r\n            maxWidth: 600,\r\n        \r\n            },  \r\n       },\r\n     \r\n      marg: {\r\n        margin: theme.spacing(3),   \r\n      }, \r\n      img:{\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        marginTop: '-50px',\r\n\r\n    }\r\n      \r\n      \r\n\r\n    \r\n}))\r\n\r\n \r\n\r\nconst AddProduct =()=>{\r\n        const classes = useStyles(); \r\n        \r\n        const [values , setvalues] = useState({\r\n            categories :[],\r\n             name:'',\r\n             description:'',\r\n             price:'',\r\n             quantity:'',\r\n             shiping:'',\r\n             category:'',\r\n             ProductImage:'',\r\n            formData:''\r\n\r\n        });\r\n        const {categories , formData} = values;\r\n        const [helpervalues , sethelpervalues] = useState({\r\n                 redirect:''\r\n        })\r\n               \r\n        const handleChange = (inchange) => (e)=> {\r\n           let exactly =   inchange ===   \"ProductImage\" ? e.target.files : e.target.value\r\n           setvalues({...values , [inchange]: exactly})\r\n           if(inchange === 'ProductImage'){\r\n            for(let i=0; i<exactly.length ; i++){\r\n                formData.append('ProductImage' ,exactly[i]);\r\n            }\r\n            }else{\r\n                formData.set(inchange , exactly);\r\n             }\r\n\r\n        }\r\n       const catOption = ()=>(\r\n        categories.map((option) => (\r\n            <MenuItem key={option._id} value={option._id}>\r\n            {option.name}\r\n            </MenuItem>\r\n        ))\r\n       )\r\n      useEffect(()=>{\r\n        getAllCat().then(data =>{\r\n            if(!data){\r\n                return console.log('No data found');\r\n            }\r\n            if(data.error){\r\n                return console.log(data.error);\r\n            }\r\n            setvalues({...values , categories : data ,formData : new FormData()});\r\n\r\n        })\r\n      }, [])        \r\n\r\n        const createProduct = (e)=>{\r\n            e.preventDefault();\r\n            addProduct(formData).then((data)=>{\r\n                if(data){\r\n                    console.log(data);\r\n                     sethelpervalues({...helpervalues , redirect: true});\r\n                }   \r\n            }).catch((err)=> console.log(err));\r\n        }\r\n        \r\n        const redirectTo = ()=>{\r\n            if(helpervalues.redirect) {\r\n                 return <Redirect to=\"/account\" />\r\n            } \r\n         }\r\n\r\n       \r\n         return(\r\n            <React.Fragment>\r\n             <Grid container spacing={1}\r\n             justify=\"center\"\r\n             alignItems=\"center\" >\r\n                 <Paper elevation={3}  className={classes.root}>\r\n                 <Grid container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                <Grid    container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                       <img src={img} className={classes.img}/> \r\n                        </Grid>      \r\n              <Typography variant='h4'align='center' className={classes.marg}>\r\n                   Create Product \r\n              </Typography>\r\n                        \r\n                <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Product Name\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    margin=\"normal\"\r\n                    onChange={handleChange('name')}\r\n                />\r\n                    <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Description\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rows={4}\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('description')}\r\n                />\r\n               <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Price\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type='number'\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('price')}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type='number'\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('quantity')}\r\n                    \r\n                />\r\n\r\n                 <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"Select Category\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('category')}\r\n                    helperText=\"Please select Category\"\r\n                    >\r\n                    {catOption()}\r\n                    </TextField>\r\n                    <FormControl component=\"fieldset\" className={classes.textWidth}>\r\n                    <FormLabel component=\"legend\">Shiping</FormLabel>\r\n                    <RadioGroup aria-label=\"ship\" name=\"shiping\"  onChange={handleChange('shiping')}>\r\n                        <FormControlLabel value=\"true\" control={<Radio />} label=\"YES\" />\r\n                        <FormControlLabel value=\"false\" control={<Radio />} label=\"NO\" />\r\n                    </RadioGroup>\r\n                    </FormControl>\r\n\r\n\r\n                    <TextField\r\n                    id=\"outlined-secondary\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type='file'\r\n                    inputProps={{ multiple: true , accept:'image/*'}} \r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('ProductImage')}\r\n                    helperText='Select Product Image' \r\n                />\r\n                  \r\n\r\n                  <Grid container spacing={3}\r\n                    justify=\"space-around\"\r\n                    className={classes.marg} >\r\n                 <Grid item>   \r\n                <Button variant=\"outlined\" component ={Link} to='/account'>\r\n                   AdminDahboard\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={createProduct}>\r\n                  Create Product\r\n                </Button>\r\n                </Grid>\r\n                 </Grid>\r\n                </Grid>\r\n         \r\n                 </Paper>\r\n                 </Grid>\r\n         \r\n\r\n             \r\n              {redirectTo()}\r\n              </React.Fragment>\r\n         )\r\n     }\r\n\r\nexport default AddProduct; ","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\addcategory.js",["190","191","192"],"import React, { useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {addCatApi} from '../../apimethod/product';\r\n\r\nimport {userLoged} from '../../apimethod/user';\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n    root: {\r\n        minWidth: 350,\r\n        maxWidth: 500,\r\n        alignItems:'center',\r\n        margin: theme.spacing(2),\r\n        marginTop: '70px',\r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 520,\r\n            maxWidth: 800,\r\n            },  \r\n       },\r\n       textWidth: {\r\n        minWidth: 330,\r\n        maxWidth: 500,\r\n        margin: theme.spacing(2),\r\n       \r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 500,\r\n            maxWidth: 600,\r\n        \r\n            },  \r\n       },\r\n     \r\n      marg: {\r\n        margin: theme.spacing(3),   \r\n      },\r\n     headTextWidth:{\r\n         width:'100%'\r\n     }, \r\n}))\r\n\r\nconst AddCategory = ()=>{\r\n    const classes = useStyle();\r\n    const [value , setvalue] = useState('')\r\n    const [redirect , setRedirect] = useState('')\r\n    \r\n    const handleChange = (val)=>(e)=>{\r\n          setvalue(e.target.value);\r\n    }\r\n    const {user: {_id } , token} = userLoged();\r\n    const addcat = ()=>{\r\n        addCatApi({name : value})\r\n          .then(data =>{\r\n              if(!data){\r\n                  return ;\r\n              }\r\n\r\n              setRedirect(true);\r\n          })\r\n    }\r\n    const redirectTo = ()=>{\r\n        if(redirect){\r\n            return <Redirect to='/account' />\r\n        }\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n             <Grid container spacing={1}\r\n             justify=\"center\"\r\n             alignItems=\"center\" >\r\n                 <Paper elevation={3}  className={classes.root}>\r\n                 <Grid container spacing={1}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\" >\r\n                      \r\n                <Typography variant='h4'align='center' className={classes.marg , classes.headTextWidth}>\r\n                   Add Category\r\n              </Typography>\r\n                        \r\n                \r\n                    <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Category\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange('category')}\r\n                    helperText='Not be empty'\r\n                />\r\n            \r\n           \r\n               <Grid container spacing={3}\r\n                    justify=\"space-around\"\r\n                    className={classes.marg} >\r\n                 <Grid item>   \r\n                <Button variant=\"outlined\" component={Link} to='/account'>\r\n                   DashBoard\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\"  onClick={addcat} >\r\n                Add Category\r\n                </Button>\r\n                </Grid>\r\n                 </Grid>\r\n                </Grid>\r\n         \r\n                 </Paper>\r\n                 </Grid>\r\n                  {redirectTo()}\r\n              </React.Fragment>\r\n        \r\n    )\r\n}\r\nexport default AddCategory;","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\dashboard.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\dashoboard.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\shop.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\searchBox.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\appdrawer.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\navlist.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\nav\\iconmenu.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\config.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\user.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\product.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\productcard.js",["193"],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\user\\userinfo.js",["194","195","196","197","198","199","200","201","202","203"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, makeStyles, Paper, Typography ,withStyles } from '@material-ui/core';\r\nimport img from '../../assets/account.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\n\r\nimport {userLoged, userProfile,userUpdateApi} from '../../apimethod/user';\r\n\r\nconst {user:{_id , role , name ,email}} = userLoged();\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n    \r\n    marg: {\r\n        marginTop:theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    \r\n    hr:{\r\n        width:200,\r\n        height:'2px',\r\n        borderWidth:0,\r\n        color:'red',\r\n        backgroundColor:'red'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        alignItems: 'center',\r\n        \r\n      },\r\n      large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        [theme.breakpoints.down('md')]: {\r\n            width: theme.spacing(7),\r\n            height: theme.spacing(7),\r\n             },\r\n      },\r\n      content:{\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: theme.spacing(30)\r\n          },\r\n      },\r\n      name:{\r\n          marginTop:theme.spacing(6),\r\n          [theme.breakpoints.down('md')]: {\r\n            marginTop:theme.spacing(1.5),\r\n           },\r\n      },\r\n      grid:{\r\n        minWidth: 300\r\n      },\r\n      textWidth: {\r\n        minWidth: 280,\r\n        maxWidth: 500,\r\n        margin: theme.spacing(1),\r\n       \r\n       [theme.breakpoints.up('md')]: {\r\n            minWidth: 500,\r\n            maxWidth: 600,\r\n        \r\n            },  \r\n       },\r\n      button:{\r\n       [theme.breakpoints.up('xs')]: {\r\n            top:18,\r\n            right:-10\r\n\r\n          }, \r\n          [theme.breakpoints.down('xs')]: {\r\n      \r\n            right:-100,\r\n            top : 10\r\n\r\n          },    \r\n      } \r\n    \r\n  \r\n}))\r\n\r\n\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      [theme.breakpoints.down('md')]: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n         },\r\n    },\r\n  }))(Avatar)\r\n\r\n\r\n\r\n\r\n  const Content = ()=>{\r\n    const classes = useStyle();\r\n    const [profile ,setprofile] = useState({});\r\n    const [value , setValues] = useState({});\r\n\r\n    const handleChange =(val)=> (e)=>{\r\n      setValues({...value,[val]: e.target.value});\r\n }\r\n\r\n\r\n const updateuser = (e)=>{\r\n       e.preventDefault();\r\n      userUpdateApi(\r\n        {address : value.Address , mob : value.MobNumber})\r\n          .then((data)=>{\r\n             if(data.Error) console.log(data.Error);\r\n              userProfile().then(data=>{\r\n               if(data.Error)console.log(data.Error);\r\n               setprofile({...profile,...data});\r\n                 console.log(profile);\r\n             }) \r\n          })\r\n }\r\n\r\n      useEffect(()=>{\r\n        userProfile().then(data=>{\r\n         if(data.Error)console.log(data.Error);\r\n         setprofile({...profile,...data});\r\n       }) \r\n      }, []);\r\n     \r\n\r\n    return(profile ? [{title1: 'Email Id' , Value1: profile.email , title2:'Full Name' , Value2:profile.name },\r\n     {title2: 'Address' , Value2: profile.address , \r\n       title1:'MobNumber' , Value1:profile.mob }].map((elm,i)=>{\r\n            return ( \r\n             \r\n              <Grid container spacing={3} className={classes.marg}>\r\n              <Grid item xs className={classes.grid}>\r\n              <Typography variant='h6' align='left'>\r\n                {elm.title1}    \r\n              </Typography>   \r\n              <Paper className={classes.paper}>\r\n              <Typography variant='h6' >\r\n                {elm.Value1}    \r\n              </Typography>   \r\n              \r\n              </Paper>\r\n              </Grid>\r\n              <Grid item xs className={classes.grid}>\r\n              <Typography variant='h6' align='left'>\r\n                {elm.title2}     \r\n              </Typography>   \r\n              \r\n              <Paper className={classes.paper} >\r\n              <Typography variant='h6'>\r\n                {elm.Value2}   \r\n              </Typography>   \r\n                  \r\n              </Paper>\r\n              </Grid>\r\n              </Grid>\r\n   \r\n      )\r\n      \r\n\r\n       })  : <></>      \r\n    )\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst UserInfo = ()=>{\r\n    const classes = useStyle();\r\n    const [profile ,setprofile] = useState({});\r\n\r\n      useEffect(()=>{\r\n        userProfile().then(data=>{\r\n         if(data.Error)console.log(data.Error);\r\n         setprofile({...profile,...data});\r\n           console.log(profile);\r\n       }) \r\n      }, []);\r\n     \r\n    \r\n    return (<div>\r\n          <Typography variant='h5' align='center' className={classes.marg}>\r\n              Your Info\r\n              <hr className={classes.hr}></hr>\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n       <Grid item xs>\r\n         <Paper className={classes.paper}>\r\n             <div className={classes.content}>\r\n             <Grid container spacing={3}>\r\n               <Grid item alignItems='center'>\r\n       \r\n               <Badge\r\n               overlap=\"circle\"\r\n               anchorOrigin={{\r\n               vertical: 'bottom',\r\n               horizontal: 'right',\r\n               }}\r\n               badgeContent={<SmallAvatar  >\r\n                               <EditIcon/>\r\n                             </SmallAvatar>}\r\n               >\r\n                   <Avatar alt='name' src={img} className={classes.large}/> \r\n              </Badge>\r\n              </Grid>\r\n              <Grid item  className={classes.name}>\r\n              <Typography variant='h6' >\r\n                  {profile ? profile.username : 'San'} \r\n              </Typography>\r\n              <Typography variant='caption'>\r\n                {profile ? profile.country : \"India\"}\r\n              </Typography>\r\n              </Grid>\r\n              </Grid>\r\n             </div>\r\n         </Paper>\r\n       </Grid>\r\n       </Grid>           \r\n    </div>\r\n    )\r\n\r\n   }\r\n\r\n\r\n\r\n   const DrawerElm = ()=>{\r\n       const classes = useStyle();\r\n    return (\r\n                    \r\n        [{text: 'User info' , icon:PersonIcon},\r\n        {text: 'Order' , icon:ShoppingBasketIcon},\r\n        {text: 'Favorites' , icon:FavoriteBorderIcon},\r\n        {text: 'Wishlist' , icon:BookmarkBorderIcon},\r\n        {text: 'Notification' , icon:NotificationsActiveIcon}].map((elm)=>{\r\n            let IconName = elm.icon;\r\n          return (<ListItem button key={elm.text} className={classes.marg}>\r\n            <ListItemIcon >\r\n                <IconName/>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n                   {elm.text}\r\n            </ListItemText>\r\n          </ListItem> )\r\n\r\n        })\r\n     )\r\n}\r\n\r\n  \r\nexport {Content , UserInfo ,DrawerElm};","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\sideelm.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\admin\\admininfo.js",["204","205","206","207"],"import React from 'react';\r\nimport { Grid, makeStyles, Paper, Typography ,withStyles } from '@material-ui/core';\r\nimport img from '../../assets/account.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport {userLoged} from '../../apimethod/user';\r\n\r\nconst {user:{_id , role , name ,email}} = userLoged();\r\n\r\nconst useStyle = makeStyles((theme)=>({\r\n    \r\n    marg: {\r\n        marginTop:theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    \r\n    hr:{\r\n        width:200,\r\n        height:'2px',\r\n        borderWidth:0,\r\n        color:'red',\r\n        backgroundColor:'red'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        alignItems: 'center',\r\n        \r\n      },\r\n      large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        [theme.breakpoints.down('md')]: {\r\n            width: theme.spacing(7),\r\n            height: theme.spacing(7),\r\n             },\r\n      },\r\n      content:{\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: theme.spacing(30)\r\n          },\r\n      },\r\n      name:{\r\n          marginTop:theme.spacing(6),\r\n          [theme.breakpoints.down('md')]: {\r\n            marginTop:theme.spacing(1.5),\r\n           },\r\n      },\r\n      grid:{\r\n        minWidth: 280\r\n      }\r\n    \r\n    \r\n  \r\n}))\r\n\r\n\r\n\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n      width: theme.spacing(5),\r\n      height: theme.spacing(5),\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      [theme.breakpoints.down('md')]: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n         },\r\n    },\r\n  }))(Avatar)\r\n\r\n\r\n\r\n\r\n  const Content = ()=>{\r\n    const classes = useStyle();\r\n\r\n\r\n    return( [{title1: 'User Id' , Value1: 'sanfrost@san' , title2:'Full Name' , value2:'Sanfrost JR' },\r\n     {title1: 'Email Id' , Value1: 'sanfrost@gmail.com' , title2:'Phone/Mobile' , value2:'8738061272' },\r\n     {title1: 'Location' , Value1: 'Kalipahadi' , \r\n       title2:'Pin Code' , value2:'22232233' }].map((elm , i)=>{\r\n\r\n         return ( \r\n           <Grid container spacing={3} key={i} className={classes.marg}>\r\n           <Grid item xs className={classes.grid}>\r\n           <Typography variant='h6' align='left'>\r\n             {elm.title1}    \r\n           </Typography>   \r\n           <Paper className={classes.paper}>\r\n           <Typography variant='h6' >\r\n             {elm.Value1}    \r\n           </Typography>   \r\n           \r\n           </Paper>\r\n           </Grid>\r\n           <Grid item xs className={classes.grid}>\r\n           <Typography variant='h6' align='left'>\r\n             {elm.title2}     \r\n           </Typography>   \r\n           \r\n           <Paper className={classes.paper} >\r\n           <Typography variant='h6'>\r\n             {elm.value2}   \r\n           </Typography>   \r\n               \r\n           </Paper>\r\n           </Grid>\r\n           </Grid>\r\n\r\n   )\r\n\r\n       })       \r\n    )\r\n\r\n} \r\n\r\n\r\n\r\n\r\n\r\nconst UserInfo = ()=>{\r\n    const classes = useStyle();\r\n    return (<div>\r\n          <Typography variant='h5' align='center' className={classes.marg}>\r\n              Your Info\r\n              <hr className={classes.hr}></hr>\r\n          </Typography>\r\n          <Grid container spacing={3}>\r\n       <Grid item xs>\r\n         <Paper className={classes.paper}>\r\n             <div className={classes.content}>\r\n             <Grid container spacing={3}>\r\n               <Grid item container alignItems='center'>\r\n       \r\n               <Badge\r\n               overlap=\"circle\"\r\n               anchorOrigin={{\r\n               vertical: 'bottom',\r\n               horizontal: 'right',\r\n               }}\r\n               badgeContent={<SmallAvatar  >\r\n                               <EditIcon/>\r\n                             </SmallAvatar>}\r\n               >\r\n                   <Avatar alt='name' src={img} className={classes.large}/> \r\n              </Badge>\r\n              </Grid>\r\n              <Grid item  className={classes.name}>\r\n              <Typography variant='h6' >\r\n                  Admin DashBoard\r\n              </Typography>\r\n              <Typography variant='caption'>\r\n                  USA\r\n              </Typography>\r\n              </Grid>\r\n              </Grid>\r\n             </div>\r\n         </Paper>\r\n       </Grid>\r\n       </Grid>           \r\n    </div>\r\n    )\r\n\r\n   }\r\n\r\n\r\n\r\n  \r\n  \r\nexport {Content , UserInfo };","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\apimethod\\cartHelper.js",[],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\cartCard.js",["208"],"C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\billingTable.js",["209"],"import React, { useState } from 'react';\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\nimport {orderPost, payment} from '../apimethod/product';\r\nconst useStyles = makeStyles((theme)=>({\r\n  table: {\r\n    minWidth: 380,\r\n    maxWidth:'100%',\r\n  },\r\n  btn:{\r\n      margin : 10,\r\n      float:'right'\r\n  },\r\n  textWidth: {\r\n    minWidth: 330,\r\n    maxWidth: 500,\r\n    margin: theme.spacing(2),\r\n   \r\n   [theme.breakpoints.up('md')]: {\r\n        minWidth: 500,\r\n        maxWidth: 600,\r\n    \r\n        },  \r\n   },\r\n \r\n}));\r\n\r\n\r\n\r\n const BillingTable = (props)=> {\r\n  const classes = useStyles();\r\n  let total =0;\r\n  const [address , setAddress] = useState('');\r\n  const table = ()=>{\r\n      \r\n     return props.allProd.map((p,i)=>{\r\n          let qty = p.qty >0 ? p.qty : 1;\r\n          let subTotal = p.price *qty\r\n         total += subTotal;\r\n\r\n        return (\r\n            <TableRow key={i}>\r\n            <TableCell>{p.name}</TableCell>\r\n            <TableCell align=\"right\">{p.price}</TableCell>\r\n            <TableCell align=\"right\">{qty}</TableCell>\r\n            <TableCell align=\"right\">{subTotal}</TableCell>\r\n          </TableRow>\r\n\r\n        )\r\n      })\r\n  }\r\n \r\n const paynow = ()=>{\r\n      props.allProd.forEach((p)=>{\r\n            p.product = p._id;\r\n            delete p._id;\r\n            delete p.createdAt;\r\n            delete p.updatedAt;\r\n            delete p.__v;\r\n            p.qty  = p.qty ? p.qty : 1\r\n      })\r\n\r\n     const order = {\r\n      products : props.allProd,\r\n        amount : total,\r\n        address\r\n      \r\n\r\n     }\r\n    orderPost(order).then((data)=>{\r\n      if(data.Error){\r\n         return console.log(data.Error);\r\n      }\r\n\r\n\r\n      payment(total, data.orderId).then((data)=>{\r\n        if(!data){\r\n          return console.log('data is not found');\r\n\r\n        }\r\n        if(data.error){\r\n          return console.log(data.error)\r\n        }\r\n       // const fromdata = new DOMParser().parseFromString(data.htmlData , \"text/html\");\r\n        //console.log(fromdata);\r\n        const action= `https://securegw-stage.paytm.in/theia/processTransaction`;\r\n        const form = document.createElement('form')\r\n        form.setAttribute('method', 'post')\r\n        form.setAttribute('action', action)\r\n       form.innerHTML = data.htmlData;\r\n       document.body.appendChild(form);\r\n        form.submit();\r\n      })\r\n\r\n      })\r\n\r\n      \r\n }\r\n  const handleChange = (e)=>{\r\n       setAddress(e.target.value);\r\n     \r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Typography variant='h5' align='center' className={classes.title}>Billing </Typography>\r\n      \r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n                    \r\n          <TableRow>\r\n            <TableCell>Product</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"right\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Sub-Total</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n           {table()}\r\n            <TableRow>\r\n                <TableCell></TableCell>\r\n                <TableCell align='right'></TableCell>\r\n                <TableCell align='right'>Total</TableCell>\r\n                <TableCell align='right'>{total}</TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n   \r\n      </Table>\r\n      <Typography justify='center' align='center'>Address: </Typography>\r\n      <TextField\r\n                    id=\"outlined-secondary\"\r\n                    label=\"Address\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.textWidth}\r\n                    onChange={handleChange}\r\n                  \r\n                />\r\n     \r\n      <Button variant='contained' className={classes.btn} color='primary' onClick={paynow}>CheckOut</Button>\r\n            \r\n   </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    allProd : state ? state.cartProduct : []\r\n})\r\n\r\nexport default connect(mapStateToProps, undefined)(BillingTable);\r\n\r\n","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\order.js",["210","211"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { orderGet } from '../apimethod/product';\r\nimport { api } from '../config';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38,\r\n  },\r\n}));\r\n\r\n function OrderCard({order}) {\r\n  const classes = useStyles();\r\n  console.log(\"prorps \", order);\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.details}>\r\n        <CardContent className={classes.content}>\r\n          <Typography component=\"h5\" variant=\"h6\">\r\n           ORDER_ID :  {order._id}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                 AMOUNT :   {order.amount}\r\n          </Typography>\r\n        </CardContent>\r\n        <div className={classes.controls}>\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n            STATUS :  {order.status}\r\n          </Typography>\r\n          \r\n        </div>\r\n      </div>\r\n      <CardMedia\r\n        className={classes.cover}\r\n        src={`${api}/product/photos/${order.product}`}\r\n        title=\"Live from space album cover\"\r\n      />\r\n      <img src={`${api}/product/photos/${order.product}`}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst  Order = ()=>{\r\n    const [orders, setOrders] = useState([]);\r\n    useEffect(()=>{\r\n        orderGet().then((data)=>{\r\n            if(!data) return  console.log(\"no Orders\");\r\n            \r\n            setOrders([...data]);\r\n            \r\n        \r\n        })\r\n\r\n\r\n     },[])\r\n     return (\r\n        <>\r\n         <div className={\"justify : center\"}>\r\n         <Typography component=\"h5\"  justify=\"center\" variant=\"h3\">\r\n            YOU HAVE  {orders.length} ORDERS\r\n          </Typography>\r\n         \r\n         \r\n         </div>\r\n         <div>\r\n        {\r\n            orders.map((or,i)=>(\r\n                <OrderCard order = {or} key ={i}/>\r\n        ))\r\n        }\r\n        </div>\r\n         \r\n       \r\n        </>\r\n     )\r\n}\r\n\r\nexport default Order;\r\n\r\n\r\n","C:\\Users\\sanfusis\\san-cloud\\ecommerce\\front-end\\src\\component\\footer.js",["212"],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":13,"column":1,"nodeType":"219","endLine":21,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":16,"nodeType":"222","messageId":"223","endLine":1,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":32,"column":7,"nodeType":"226","endLine":32,"endColumn":9,"suggestions":"227"},{"ruleId":"217","severity":1,"message":"218","line":32,"column":1,"nodeType":"219","endLine":109,"endColumn":2},{"ruleId":"220","severity":1,"message":"228","line":40,"column":21,"nodeType":"222","messageId":"223","endLine":40,"endColumn":29},{"ruleId":"224","severity":1,"message":"229","line":53,"column":9,"nodeType":"226","endLine":53,"endColumn":11,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"218","line":5,"column":1,"nodeType":"219","endLine":9,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":5,"column":1,"nodeType":"219","endLine":9,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":5,"column":1,"nodeType":"219","endLine":9,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":5,"column":1,"nodeType":"219","endLine":9,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":70,"column":13,"nodeType":"233","messageId":"234","endLine":70,"endColumn":19},{"ruleId":"235","severity":1,"message":"236","line":143,"column":24,"nodeType":"237","endLine":143,"endColumn":64},{"ruleId":"235","severity":1,"message":"236","line":118,"column":24,"nodeType":"237","endLine":118,"endColumn":64},{"ruleId":"220","severity":1,"message":"238","line":7,"column":18,"nodeType":"222","messageId":"223","endLine":7,"endColumn":24},{"ruleId":"220","severity":1,"message":"239","line":9,"column":9,"nodeType":"222","messageId":"223","endLine":9,"endColumn":12},{"ruleId":"224","severity":1,"message":"240","line":89,"column":11,"nodeType":"226","endLine":89,"endColumn":13,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":100,"column":54,"nodeType":"244","messageId":"245","endLine":100,"endColumn":55},{"ruleId":"220","severity":1,"message":"246","line":1,"column":18,"nodeType":"222","messageId":"223","endLine":1,"endColumn":27},{"ruleId":"224","severity":1,"message":"247","line":109,"column":10,"nodeType":"226","endLine":109,"endColumn":12,"suggestions":"248"},{"ruleId":"235","severity":1,"message":"236","line":140,"column":24,"nodeType":"237","endLine":140,"endColumn":64},{"ruleId":"220","severity":1,"message":"249","line":53,"column":19,"nodeType":"222","messageId":"223","endLine":53,"endColumn":22},{"ruleId":"220","severity":1,"message":"250","line":53,"column":27,"nodeType":"222","messageId":"223","endLine":53,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":79,"column":80,"nodeType":"244","messageId":"245","endLine":79,"endColumn":81},{"ruleId":"220","severity":1,"message":"239","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":13},{"ruleId":"220","severity":1,"message":"251","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":17},{"ruleId":"220","severity":1,"message":"252","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":14},{"ruleId":"220","severity":1,"message":"249","line":20,"column":14,"nodeType":"222","messageId":"223","endLine":20,"endColumn":17},{"ruleId":"220","severity":1,"message":"253","line":20,"column":20,"nodeType":"222","messageId":"223","endLine":20,"endColumn":24},{"ruleId":"220","severity":1,"message":"254","line":20,"column":27,"nodeType":"222","messageId":"223","endLine":20,"endColumn":31},{"ruleId":"220","severity":1,"message":"255","line":20,"column":33,"nodeType":"222","messageId":"223","endLine":20,"endColumn":38},{"ruleId":"220","severity":1,"message":"256","line":115,"column":11,"nodeType":"222","messageId":"223","endLine":115,"endColumn":23},{"ruleId":"220","severity":1,"message":"257","line":120,"column":8,"nodeType":"222","messageId":"223","endLine":120,"endColumn":18},{"ruleId":"224","severity":1,"message":"258","line":139,"column":10,"nodeType":"226","endLine":139,"endColumn":12,"suggestions":"259"},{"ruleId":"224","severity":1,"message":"258","line":195,"column":10,"nodeType":"226","endLine":195,"endColumn":12,"suggestions":"260"},{"ruleId":"220","severity":1,"message":"249","line":10,"column":14,"nodeType":"222","messageId":"223","endLine":10,"endColumn":17},{"ruleId":"220","severity":1,"message":"253","line":10,"column":20,"nodeType":"222","messageId":"223","endLine":10,"endColumn":24},{"ruleId":"220","severity":1,"message":"254","line":10,"column":27,"nodeType":"222","messageId":"223","endLine":10,"endColumn":31},{"ruleId":"220","severity":1,"message":"255","line":10,"column":33,"nodeType":"222","messageId":"223","endLine":10,"endColumn":38},{"ruleId":"220","severity":1,"message":"239","line":7,"column":9,"nodeType":"222","messageId":"223","endLine":7,"endColumn":12},{"ruleId":"220","severity":1,"message":"261","line":2,"column":22,"nodeType":"222","messageId":"223","endLine":2,"endColumn":35},{"ruleId":"220","severity":1,"message":"262","line":2,"column":22,"nodeType":"222","messageId":"223","endLine":2,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":61,"column":7,"nodeType":"237","endLine":61,"endColumn":60},{"ruleId":"220","severity":1,"message":"263","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":19},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productArrival' and 'productSell'. Either include them or remove the dependency array.","ArrayExpression",["266"],"'setLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'applyFilter'. Either include it or remove the dependency array.",["267"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Hidden' is defined but never used.","'api' is defined but never used.","React Hook useEffect has missing dependencies: 'loadProduct' and 'relProduct'. Either include them or remove the dependency array.",["268"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setvalues(v => ...)' if you only need 'values' in the 'setvalues' call.",["269"],"'_id' is assigned a value but never used.","'token' is assigned a value but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'role' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'updateuser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array. You can also do a functional update 'setprofile(p => ...)' if you only need 'profile' in the 'setprofile' call.",["270"],["271"],"'ThemeProvider' is defined but never used.","'useTheme' is defined but never used.","'CssBaseline' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},"Update the dependencies array to be: [productArrival, productSell]",{"range":"283","text":"284"},"Update the dependencies array to be: [applyFilter]",{"range":"285","text":"286"},"Update the dependencies array to be: [loadProduct, relProduct]",{"range":"287","text":"288"},"Update the dependencies array to be: [values]",{"range":"289","text":"290"},"Update the dependencies array to be: [profile]",{"range":"291","text":"292"},{"range":"293","text":"292"},[933,935],"[productArrival, productSell]",[1611,1613],"[applyFilter]",[2355,2357],"[loadProduct, relProduct]",[3236,3238],"[values]",[3844,3846],"[profile]",[5420,5422]]